name: Release
on:
  repository_dispatch:
    types: [release]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Determine Deployment File Path
        id: deployment-file
        run: |
          # Construct the manifest file path based on app and environment
          export MANIFEST_FILE="apps/${{ github.event.client_payload.app }}/${{ github.event.client_payload.env }}/deploy.yaml"
          echo "file=${MANIFEST_FILE}" >> $GITHUB_ENV
      - name: Update deployment file
        run: sed -i 's|<IMAGE>|${{ github.event.client_payload.image }}|' $GITHUB_WORKSPACE/${{ env.file }}
      - name: Update Secrets in Kubernetes Secret Manifest
        if: ${{ github.event.client_payload.app }} == "dagligvare-vurdering-backend"
        run: |
          sed -i 's|<POSTGRES_USER>|${{ secrets.POSTGRES_USER }}|' $GITHUB_WORKSPACE/${{ env.file }}
          sed -i 's|<POSTGRES_PASSWORD>|${{ secrets.POSTGRES_PASSWORD }}|' $GITHUB_WORKSPACE/${{ env.file }}
          sed -i 's|<POSTGRES_DB>|${{ secrets.POSTGRES_DB }}|' $GITHUB_WORKSPACE/${{ env.file }}
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}
      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/${{ env.file }}
      - name: Verify Deployment
        run: |
          DEPLOYMENT_NAME="${{ github.event.client_payload.app }}"
          kubectl rollout status deployment/$DEPLOYMENT_NAME-deployment -n dagligvare
